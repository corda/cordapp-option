buildscript {
    ext {
        corda_release_group = 'com.r3.corda'
        corda_release_version = '4.0-RC01'
        corda_gradle_plugins_version = '4.0.38'
        kotlin_version = '1.2.71'
        junit_version = '4.12'
        quasar_group = 'co.paralleluniverse'
        quasar_version = '0.7.11_r3'
        options_cordapp_version = '4.0.0'
        corda_platform_version = 4
    }
    repositories {
        mavenLocal()
        mavenCentral()
        jcenter()
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "net.corda.plugins:cordapp:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:cordformation:$corda_gradle_plugins_version"
        classpath "net.corda.plugins:quasar-utils:$corda_gradle_plugins_version"
    }
}

allprojects {
    apply plugin: 'kotlin'
    repositories {
        jcenter()
        mavenCentral()
        maven { url 'https://jitpack.io' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda' }
        // [Option 1: Add CORDA_ENTERPRISE_REPOSITORY_URL, CORDA_ENTERPRISE_REPOSITORY_USERNAME and CORDA_ENTERPRISE_REPOSITORY_PASSWORD environment variables that point to your company's maven repository which contain the enterprise binaries.]
        if (System.env.CORDA_ENTERPRISE_REPOSITORY_URL != null) {
            maven {
                url = System.getenv('CORDA_ENTERPRISE_REPOSITORY_URL')
                credentials {
                    username = System.getenv('CORDA_ENTERPRISE_REPOSITORY_USERNAME')
                    password = System.getenv('CORDA_ENTERPRISE_REPOSITORY_PASSWORD')
                }
            }
        }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-dependencies' }
        maven { url 'https://ci-artifactory.corda.r3cev.com/artifactory/corda-releases' }

        // [Option 2: Add Corda Enterprise binaries in ~/.m2/repository or C:\Documents and Settings\{your-username}\.m2]
        // [Option 3: uncomment the following block and tweak it to point to resolve Corda Enterprise dependencies against a custom path on your local file system.]
        // maven {
        //     url 'file://D:/path/to/local/directory'
        // }
        mavenLocal()
    }
}

apply plugin: 'kotlin'
apply plugin: 'net.corda.plugins.cordapp'
apply plugin: 'net.corda.plugins.cordformation'
apply plugin: 'net.corda.plugins.quasar-utils'

sourceSets {
    main {
        resources {
            srcDir "config/dev"
        }
    }
    test {
        resources {
            srcDir "config/test"
        }
    }
}
cordapp {
    info {
        name "CorDapp Option"
        vendor "Corda Open Source"
        version "$options_cordapp_version"
        targetPlatformVersion corda_platform_version.toInteger()
        minimumPlatformVersion corda_platform_version.toInteger()
    }
}

dependencies {
    compile "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"

    cordaCompile "$corda_release_group:corda-core:$corda_release_version"
    cordaCompile "net.corda:corda-finance-contracts:4.0-RC03"
    cordaCompile "$corda_release_group:corda-finance-workflows:$corda_release_version"
    cordaCompile "$corda_release_group:corda-jackson:$corda_release_version"
    cordaCompile "$corda_release_group:corda-rpc:$corda_release_version"
    cordaCompile "$corda_release_group:corda-node-api:$corda_release_version"
    cordaCompile "$corda_release_group:corda-webserver-impl:$corda_release_version"
    cordaRuntime "$corda_release_group:corda:$corda_release_version"
    cordaRuntime "$corda_release_group:corda-webserver:$corda_release_version"

    testCompile "org.jetbrains.kotlin:kotlin-test:$kotlin_version"
    testCompile "junit:junit:$junit_version"
    testCompile "$corda_release_group:corda-node-driver:$corda_release_version"

    cordapp "net.corda:corda-finance-contracts:4.0-RC03"
    cordapp "$corda_release_group:corda-finance-workflows:$corda_release_version"
    cordapp project(":base")
    cordapp project(":client")
    cordapp project(":oracle")
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        languageVersion = "1.2"
        apiVersion = "1.2"
        jvmTarget = "1.8"
        javaParameters = true   // Useful for reflection.
    }
}
task deployNodes(type: net.corda.plugins.Cordform, dependsOn: ['jar']) {
    directory "./build/nodes"
    node {
        name "O=Notary,L=London,C=GB"
        notary = [validating : false]
        p2pPort 10002
        rpcSettings {
            address("localhost:10003")
            adminAddress("localhost:10043")
        }
        cordapps = []
    }
    node {
        name "O=Issuer,L=London,C=GB"
        p2pPort 10005
        rpcSettings {
            address("localhost:10006")
            adminAddress("localhost:10046")
        }
        webPort 10007
        cordapps = ["net.corda:corda-finance-contracts:4.0-RC03",
                    "$corda_release_group:corda-finance-workflows:$corda_release_version",
                    "net.corda.option:base:$version",
                    "net.corda.option:client:$version"]
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=PartyA,L=New York,C=US"
        p2pPort 10008
        rpcSettings {
            address("localhost:10009")
            adminAddress("localhost:10049")
        }
        webPort 10010
        cordapps = ["net.corda:corda-finance-contracts:4.0-RC03",
                    "$corda_release_group:corda-finance-workflows:$corda_release_version",
                    "net.corda.option:base:$version",
                    "net.corda.option:client:$version"]
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=PartyB,L=Paris,C=FR"
        p2pPort 10011
        rpcSettings {
            address("localhost:10012")
            adminAddress("localhost:10052")
        }
        webPort 10013
        cordapps = ["net.corda:corda-finance-contracts:4.0-RC03",
                    "$corda_release_group:corda-finance-workflows:$corda_release_version",
                    "net.corda.option:base:$version",
                    "net.corda.option:client:$version"]
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
    node {
        name "O=Oracle,L=New York,C=US"
        p2pPort 10014
        rpcSettings {
            address("localhost:10015")
            adminAddress("localhost:10055")
        }
        cordapps = ["net.corda:corda-finance-contracts:4.0-RC03",
                    "$corda_release_group:corda-finance-workflows:$corda_release_version",
                    "net.corda.option:base:$version",
                    "net.corda.option:oracle:$version"]
        rpcUsers = [[user: "user1", "password": "test", "permissions": ["ALL"]]]
    }
}
